## mySql config
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=02012002
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

server.port=8081
spring.application.name=order-service

## eureka client config
# this is url of eureka server
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka/

## actuator config
management.health.circuitbreakers.enabled=true
# this is for showing all endpoints in actuator
management.endpoints.web.exposure.include=*
# this is for showing all details of endpoints in actuator
management.endpoint.health.show-details=always

## resilience4j config
## ..inventory.. is name of circuit breaker in @CircuitBreaker annotation
# register health indicator for circuit breaker
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true
# event-consumer-buffer-size: The size of the ring buffer for the event consumer.
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
# sliding-window-type: COUNT_BASED (is based on the number of calls) or TIME_BASED (is based on a time window).
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED
# sliding-window-size: The size of the sliding window which is used to record the outcome of calls when the CircuitBreaker is closed.
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5
# failure-rate-threshold: The failure rate threshold in percentage above which the CircuitBreaker should trip open and start short-circuiting calls.
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50
# wait-duration-in-open-state: The wait duration which specifies how long the CircuitBreaker should stay open, before it switches to half open.
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s
# permitted-number-of-calls-in-half-open-state: The number of permitted calls when the CircuitBreaker is half open.
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3
# automatic-transition-from-open-to-half-open-enabled: Enables automatic transition from OPEN to HALF_OPEN state once the wait duration has elapsed.
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true
# timeout-duration: The timeout duration for which the CircuitBreaker should stay in open state.
resilience4j.timelimiter.instances.inventory.timeout-duration=3s
# max-attempts: The maximum number of retry attempts for retry.
resilience4j.retry.instances.inventory.max-attempts=3
# wait-duration: The wait duration defines how long the retry should wait before it retries.
resilience4j.retry.instances.inventory.wait-duration=5s

# distributed tracing config
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

# logging config
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}] [%c{1.}]

## kafka config
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notification-topic
# KafkaTemplate<String, OrderPlacedEvent>: format of key in kafka as String
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# KafkaTemplate<String, OrderPlacedEvent>: format of value in kafka as Json
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.imvux21.orderservice.event.OrderPlacedEvent